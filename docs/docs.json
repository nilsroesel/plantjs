{
  "id": 0,
  "name": "skeiÃ°js",
  "kind": 0,
  "flags": {},
  "children": [
    {
      "id": 157,
      "name": "\"decorators/application.decorator\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/decorators/application.decorator.ts",
      "children": [
        {
          "id": 158,
          "name": "Application",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "decorates": [
            {
              "type": "reference",
              "name": "Test",
              "id": 186
            }
          ],
          "signatures": [
            {
              "id": 159,
              "name": "Application",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Class Decorator Function",
                "text": "Creates a runner upon a class. No need to create an object and to serve manually",
                "returns": "\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\n\n  @Application({\n     contentType: 'application/json',\n     server: {\n         port: 3000,\n         maxConnections: 10,\n         timeout: 500,\n         keepAliveTimeout: 500\n     },\n     components: [TestComponent],\n     middleware: [(request: Request, response: Response) => { }]\n  })\n  class Test {}\n```\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 160,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ApplicationConfig",
                    "id": 95
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "(Anonymous function)"
              }
            }
          ],
          "sources": [
            {
              "fileName": "decorators/application.decorator.ts",
              "line": 29,
              "character": 27
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            158
          ]
        }
      ],
      "sources": [
        {
          "fileName": "decorators/application.decorator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1,
      "name": "\"decorators/component.decorator\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/decorators/component.decorator.ts",
      "children": [
        {
          "id": 2,
          "name": "Component",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "decorates": [
            {
              "type": "reference",
              "name": "TestComponent",
              "id": 169
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "Component",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Class Decorator Function",
                "text": "A collection of endpoints. Every endpoints in this will apply the given metadata.\nAdd the class Symbols to the application components array (similar to angular module)\nto apply them to an application",
                "returns": "\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\n\n  @Component({\n     route: '/api',\n     middleware: [(request: Request, response: Response) => { }]\n  })\n  class Test {}\n```\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 4,
                  "name": "conf",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ComponentConfig",
                    "id": 106
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "(Anonymous function)"
              }
            }
          ],
          "sources": [
            {
              "fileName": "decorators/component.decorator.ts",
              "line": 21,
              "character": 25
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            2
          ]
        }
      ],
      "sources": [
        {
          "fileName": "decorators/component.decorator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 5,
      "name": "\"decorators/endpoint.decorator\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/decorators/endpoint.decorator.ts",
      "children": [
        {
          "id": 6,
          "name": "EndpointHandler",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 7,
              "name": "functionContextInstance",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "decorators/endpoint.decorator.ts",
                  "line": 58,
                  "character": 27
                }
              ],
              "type": {
                "type": "reference",
                "name": "Object"
              }
            },
            {
              "id": 8,
              "name": "functionKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "decorators/endpoint.decorator.ts",
                  "line": 59,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 10,
              "name": "middleware",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "decorators/endpoint.decorator.ts",
                  "line": 61,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Middleware",
                "id": 41
              }
            },
            {
              "id": 9,
              "name": "route",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "decorators/endpoint.decorator.ts",
                  "line": 60,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                7,
                8,
                10,
                9
              ]
            }
          ],
          "sources": [
            {
              "fileName": "decorators/endpoint.decorator.ts",
              "line": 57,
              "character": 32
            }
          ]
        },
        {
          "id": 11,
          "name": "Endpoint",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "decorates": [
            {
              "type": "reference",
              "name": "test1",
              "id": 174
            },
            {
              "type": "reference",
              "name": "test2",
              "id": 178
            },
            {
              "type": "reference",
              "name": "test3",
              "id": 182
            }
          ],
          "signatures": [
            {
              "id": 12,
              "name": "Endpoint",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Property Decorator Function",
                "text": "Creates an endpoint of a function\nThe decorated function need the following index signature otherwise it will throw an error\n(request: Request, response: Response, next?: Function) (also an indexsignature fore middlewares)\nIf you pass the next-function and call it, it will get the next function from the route middlewares\nand abort the current execution",
                "returns": "\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\n\n  @Component({route: '/api'})\n  class Test {\n\n     @Endpoint({\n         route: '/foo'\n         middleware: [(request: request) => request.params['foo'] = foo; ]\n     )\n     foo(request: Request, response: Response) {\n         response\n          .status(200)\n          .json(request.params.foo)\n          .send();\n     }\n  }\n```\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 13,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "EndpointConfig",
                    "id": 110
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "(Anonymous function)"
              }
            }
          ],
          "sources": [
            {
              "fileName": "decorators/endpoint.decorator.ts",
              "line": 33,
              "character": 24
            }
          ]
        },
        {
          "id": 14,
          "name": "checkHandlerFunctionIndexSignature",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 15,
              "name": "checkHandlerFunctionIndexSignature",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 16,
                  "name": "target",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Object"
                  }
                },
                {
                  "id": 17,
                  "name": "key",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ],
          "sources": [
            {
              "fileName": "decorators/endpoint.decorator.ts",
              "line": 64,
              "character": 50
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            6
          ]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            11,
            14
          ]
        }
      ],
      "sources": [
        {
          "fileName": "decorators/endpoint.decorator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 93,
      "name": "\"decorators/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/decorators/index.ts",
      "sources": [
        {
          "fileName": "decorators/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 90,
      "name": "\"decorators/injectable.decorator\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/decorators/injectable.decorator.ts",
      "children": [
        {
          "id": 91,
          "name": "Injectable",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "decorates": [
            {
              "type": "reference",
              "name": "TestInjectable",
              "id": 162
            }
          ],
          "signatures": [
            {
              "id": 92,
              "name": "Injectable",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Class Decorator Function",
                "text": "Allows to inject dependencies into objects",
                "returns": "\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\n\n  @Injectable()\n  class InjectedDependency {\n     public foo = 'foo'\n  }\n\n  class Target {\n     constructor (private foo: InjectedDependency);\n\n     getFoosFoo() { return this.foo.foo }\n  }\n```\n"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "name": "GenericClassDecorator",
                "id": 35,
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "Instantiable",
                    "id": 20,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "decorators/injectable.decorator.ts",
              "line": 24,
              "character": 26
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            91
          ]
        }
      ],
      "sources": [
        {
          "fileName": "decorators/injectable.decorator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 18,
      "name": "\"decorators/internal.index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/decorators/internal.index.ts",
      "sources": [
        {
          "fileName": "decorators/internal.index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 156,
      "name": "\"index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/index.ts",
      "sources": [
        {
          "fileName": "index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 94,
      "name": "\"interfaces/application.interface\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/interfaces/application.interface.ts",
      "children": [
        {
          "id": 95,
          "name": "ApplicationConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 104,
              "name": "components",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "interfaces/application.interface.ts",
                  "line": 12,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Array",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "Function"
                  }
                ]
              }
            },
            {
              "id": 96,
              "name": "contentType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "interfaces/application.interface.ts",
                  "line": 4,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 103,
              "name": "middleware",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "interfaces/application.interface.ts",
                  "line": 11,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Middleware",
                "id": 41
              }
            },
            {
              "id": 97,
              "name": "server",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "interfaces/application.interface.ts",
                  "line": 5,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 98,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 102,
                      "name": "keepAliveTimeout",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "interfaces/application.interface.ts",
                          "line": 9,
                          "character": 24
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 100,
                      "name": "maxConnections",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "interfaces/application.interface.ts",
                          "line": 7,
                          "character": 22
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 99,
                      "name": "port",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "interfaces/application.interface.ts",
                          "line": 6,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 101,
                      "name": "timeout",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "interfaces/application.interface.ts",
                          "line": 8,
                          "character": 15
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        102,
                        100,
                        99,
                        101
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "interfaces/application.interface.ts",
                      "line": 5,
                      "character": 11
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                104,
                96,
                103,
                97
              ]
            }
          ],
          "sources": [
            {
              "fileName": "interfaces/application.interface.ts",
              "line": 3,
              "character": 34
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            95
          ]
        }
      ],
      "sources": [
        {
          "fileName": "interfaces/application.interface.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 105,
      "name": "\"interfaces/component.interface\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/interfaces/component.interface.ts",
      "children": [
        {
          "id": 106,
          "name": "ComponentConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 108,
              "name": "middleware",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "interfaces/component.interface.ts",
                  "line": 5,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Middleware",
                "id": 41
              }
            },
            {
              "id": 107,
              "name": "route",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "interfaces/component.interface.ts",
                  "line": 4,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                108,
                107
              ]
            }
          ],
          "sources": [
            {
              "fileName": "interfaces/component.interface.ts",
              "line": 3,
              "character": 32
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            106
          ]
        }
      ],
      "sources": [
        {
          "fileName": "interfaces/component.interface.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 109,
      "name": "\"interfaces/endpoint.interface\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/interfaces/endpoint.interface.ts",
      "children": [
        {
          "id": 110,
          "name": "EndpointConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 112,
              "name": "middleware",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "interfaces/endpoint.interface.ts",
                  "line": 5,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Middleware",
                "id": 41
              }
            },
            {
              "id": 111,
              "name": "route",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "interfaces/endpoint.interface.ts",
                  "line": 4,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                112,
                111
              ]
            }
          ],
          "sources": [
            {
              "fileName": "interfaces/endpoint.interface.ts",
              "line": 3,
              "character": 31
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            110
          ]
        }
      ],
      "sources": [
        {
          "fileName": "interfaces/endpoint.interface.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 113,
      "name": "\"interfaces/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/interfaces/index.ts",
      "sources": [
        {
          "fileName": "interfaces/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 42,
      "name": "\"interfaces/internal.index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/interfaces/internal.index.ts",
      "sources": [
        {
          "fileName": "interfaces/internal.index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 19,
      "name": "\"interfaces/types\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/interfaces/types.ts",
      "children": [
        {
          "id": 20,
          "name": "Instantiable",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 21,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "children": [
            {
              "id": 22,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 23,
                  "name": "new Instantiable",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 24,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "interfaces/types.ts",
                  "line": 13,
                  "character": 34
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                22
              ]
            }
          ],
          "sources": [
            {
              "fileName": "interfaces/types.ts",
              "line": 13,
              "character": 29
            }
          ]
        },
        {
          "id": 31,
          "name": "ContextHandlerFn",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "interfaces/types.ts",
              "line": 5,
              "character": 28
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 32,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 33,
                  "name": "functionContextInstance",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "interfaces/types.ts",
                      "line": 5,
                      "character": 56
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Object"
                  }
                },
                {
                  "id": 34,
                  "name": "functionKey",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "interfaces/types.ts",
                      "line": 5,
                      "character": 77
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [
                    33,
                    34
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "interfaces/types.ts",
                  "line": 5,
                  "character": 30
                }
              ]
            }
          }
        },
        {
          "id": 35,
          "name": "GenericClassDecorator",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 36,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "sources": [
            {
              "fileName": "interfaces/types.ts",
              "line": 7,
              "character": 33
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 37,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 38,
                  "name": "__call",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 39,
                      "name": "target",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "interfaces/types.ts",
                  "line": 7,
                  "character": 38
                }
              ]
            }
          }
        },
        {
          "id": 25,
          "name": "HandlerFn",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "interfaces/types.ts",
              "line": 3,
              "character": 21
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 26,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 27,
                  "name": "__call",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 28,
                      "name": "request",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Request",
                        "id": 115
                      }
                    },
                    {
                      "id": 29,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Response",
                        "id": 132
                      }
                    },
                    {
                      "id": 30,
                      "name": "next",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "Function"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "interfaces/types.ts",
                  "line": 3,
                  "character": 23
                }
              ]
            }
          }
        },
        {
          "id": 41,
          "name": "Middleware",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "interfaces/types.ts",
              "line": 11,
              "character": 22
            }
          ],
          "type": {
            "type": "reference",
            "name": "Array",
            "typeArguments": [
              {
                "type": "reference",
                "name": "MiddlewareFunction",
                "id": 40
              }
            ]
          }
        },
        {
          "id": 40,
          "name": "MiddlewareFunction",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "interfaces/types.ts",
              "line": 9,
              "character": 30
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "HandlerFn",
                "id": 25
              },
              {
                "type": "reference",
                "name": "ContextHandlerFn",
                "id": 31
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            20
          ]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            31,
            35,
            25,
            41,
            40
          ]
        }
      ],
      "sources": [
        {
          "fileName": "interfaces/types.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 89,
      "name": "\"internal.index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/internal.index.ts",
      "sources": [
        {
          "fileName": "internal.index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 161,
      "name": "\"playground\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/playground.ts",
      "children": [
        {
          "id": 186,
          "name": "Test",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "decorators": [
            {
              "name": "Application",
              "type": {
                "type": "reference",
                "name": "Application",
                "id": 158
              },
              "arguments": {
                "config": "{\n    contentType: 'application/json',\n    server: {\n        port: 3000,\n        maxConnections: 10,\n        timeout: 500,\n        keepAliveTimeout: 500\n    },\n    components: [TestComponent],\n    middleware: [\n        (request: Request, response: Response) => { console.log('Iam a application Scope Middleware')}\n    ]\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "playground.ts",
              "line": 94,
              "character": 10
            }
          ]
        },
        {
          "id": 169,
          "name": "TestComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component",
                "id": 2
              },
              "arguments": {
                "conf": "{\n    route: '/api',\n    middleware: [\n        (request: Request, response: Response) => { console.log('Iam a Component Scope Middleware')}\n    ]\n}"
              }
            }
          ],
          "children": [
            {
              "id": 170,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 172,
                  "name": "new TestComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 173,
                      "name": "foo",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "TestInjectable",
                        "id": 162
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "TestComponent",
                    "id": 169
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 28,
                  "character": 21
                }
              ]
            },
            {
              "id": 171,
              "name": "foo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 29,
                  "character": 26
                }
              ],
              "type": {
                "type": "reference",
                "name": "TestInjectable",
                "id": 162
              }
            },
            {
              "id": 174,
              "name": "test1",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "decorators": [
                {
                  "name": "Endpoint",
                  "type": {
                    "type": "reference",
                    "name": "Endpoint",
                    "id": 11
                  },
                  "arguments": {
                    "config": "{\n        route: '/foo/:id'\n    }"
                  }
                }
              ],
              "signatures": [
                {
                  "id": 175,
                  "name": "test1",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 176,
                      "name": "request",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Request",
                        "id": 115
                      }
                    },
                    {
                      "id": 177,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Response",
                        "id": 132
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 34,
                  "character": 9
                }
              ]
            },
            {
              "id": 178,
              "name": "test2",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "decorators": [
                {
                  "name": "Endpoint",
                  "type": {
                    "type": "reference",
                    "name": "Endpoint",
                    "id": 11
                  },
                  "arguments": {
                    "config": "{\n        route: '/foo/:id',\n        middleware: [\n            (request: Request, response: Response, next: Function) => {\n                console.log(request.params);\n                next();\n                console.log('should be hidden');\n            },\n            (request: Request, response: Response) => { console.log('i should be displayed after the logged params')}\n        ]\n    }"
                  }
                }
              ],
              "signatures": [
                {
                  "id": 179,
                  "name": "test2",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 180,
                      "name": "request",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Request",
                        "id": 115
                      }
                    },
                    {
                      "id": 181,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Response",
                        "id": 132
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 52,
                  "character": 9
                }
              ]
            },
            {
              "id": 182,
              "name": "test3",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "decorators": [
                {
                  "name": "Endpoint",
                  "type": {
                    "type": "reference",
                    "name": "Endpoint",
                    "id": 11
                  },
                  "arguments": {
                    "config": "{\n        route: '/foo2/:id',\n        middleware: [(request: Request) => {request.params['test'] = {msg: 'I come from a middle..where?'}}]\n    }"
                  }
                }
              ],
              "signatures": [
                {
                  "id": 183,
                  "name": "test3",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 184,
                      "name": "request",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Request",
                        "id": 115
                      }
                    },
                    {
                      "id": 185,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Response",
                        "id": 132
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 63,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                170
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                171
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                174,
                178,
                182
              ]
            }
          ],
          "sources": [
            {
              "fileName": "playground.ts",
              "line": 28,
              "character": 19
            }
          ]
        },
        {
          "id": 162,
          "name": "TestInjectable",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable",
                "id": 91
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 164,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 165,
                  "name": "new TestInjectable",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "TestInjectable",
                    "id": 162
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 13,
                  "character": 16
                }
              ]
            },
            {
              "id": 163,
              "name": "bar",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 13,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 166,
              "name": "doStuff",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 167,
                  "name": "doStuff",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 168,
                      "name": "logger",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "playground.ts",
                  "line": 19,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                164
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                163
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                166
              ]
            }
          ],
          "sources": [
            {
              "fileName": "playground.ts",
              "line": 12,
              "character": 20
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            186,
            169,
            162
          ]
        }
      ],
      "sources": [
        {
          "fileName": "playground.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 155,
      "name": "\"util/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/index.ts",
      "sources": [
        {
          "fileName": "util/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 79,
      "name": "\"util/injector\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/injector.ts",
      "sources": [
        {
          "fileName": "util/injector.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 88,
      "name": "\"util/internal.index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/internal.index.ts",
      "sources": [
        {
          "fileName": "util/internal.index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 81,
      "name": "\"util/middleware.iterator\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/middleware.iterator.ts",
      "sources": [
        {
          "fileName": "util/middleware.iterator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 43,
      "name": "\"util/route\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/route.ts",
      "sources": [
        {
          "fileName": "util/route.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 55,
      "name": "\"util/router\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/router.ts",
      "sources": [
        {
          "fileName": "util/router.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 154,
      "name": "\"util/wrapper/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/wrapper/index.ts",
      "sources": [
        {
          "fileName": "util/wrapper/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 114,
      "name": "\"util/wrapper/request.wrapper\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/wrapper/request.wrapper.ts",
      "children": [
        {
          "id": 115,
          "name": "Request",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 124,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 125,
                  "name": "new Request",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 126,
                      "name": "request",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "IncomingMessage"
                      }
                    },
                    {
                      "id": 127,
                      "name": "body",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 128,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Request",
                    "id": 115
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 22,
                  "character": 26
                }
              ]
            },
            {
              "id": 123,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 22,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 121,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 20,
                  "character": 20
                }
              ],
              "type": {
                "type": "reference",
                "name": "IncomingHttpHeaders"
              }
            },
            {
              "id": 122,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 21,
                  "character": 19
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 120,
              "name": "params",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 19,
                  "character": 19
                }
              ],
              "type": {
                "type": "reference",
                "name": "Object"
              }
            },
            {
              "id": 119,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 18,
                  "character": 16
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 129,
              "name": "json",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 130,
                  "name": "json",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Object"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 32,
                  "character": 8
                }
              ]
            },
            {
              "id": 116,
              "name": "readRequestBody",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 117,
                  "name": "readRequestBody",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 118,
                      "name": "request",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "IncomingMessage"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Promise",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/request.wrapper.ts",
                  "line": 4,
                  "character": 26
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                124
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                123,
                121,
                122,
                120,
                119
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                129,
                116
              ]
            }
          ],
          "sources": [
            {
              "fileName": "util/wrapper/request.wrapper.ts",
              "line": 3,
              "character": 20
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            115
          ]
        }
      ],
      "sources": [
        {
          "fileName": "util/wrapper/request.wrapper.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 131,
      "name": "\"util/wrapper/response.wrapper\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/PROGRAMMIERUNG/skeidjs/src/util/wrapper/response.wrapper.ts",
      "children": [
        {
          "id": 132,
          "name": "Response",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 135,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 136,
                  "name": "new Response",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 137,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ServerResponse"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Response",
                    "id": 132
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 5,
                  "character": 31
                }
              ]
            },
            {
              "id": 133,
              "name": "response",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 4,
                  "character": 20
                }
              ],
              "type": {
                "type": "reference",
                "name": "ServerResponse"
              }
            },
            {
              "id": 134,
              "name": "statusCode",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 5,
                  "character": 22
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 149,
              "name": "json",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 150,
                  "name": "json",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 151,
                      "name": "payload",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Response",
                    "id": 132
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 27,
                  "character": 8
                }
              ]
            },
            {
              "id": 152,
              "name": "send",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 153,
                  "name": "send",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 32,
                  "character": 8
                }
              ]
            },
            {
              "id": 138,
              "name": "setHeader",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 139,
                  "name": "setHeader",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 140,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 141,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Response",
                    "id": 132
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 11,
                  "character": 13
                }
              ]
            },
            {
              "id": 142,
              "name": "status",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 143,
                  "name": "status",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 144,
                      "name": "status",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 145,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Response",
                    "id": 132
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 16,
                  "character": 10
                }
              ]
            },
            {
              "id": 146,
              "name": "text",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 147,
                  "name": "text",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 148,
                      "name": "payload",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Response",
                    "id": 132
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "util/wrapper/response.wrapper.ts",
                  "line": 22,
                  "character": 8
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                135
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                133,
                134
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                149,
                152,
                138,
                142,
                146
              ]
            }
          ],
          "sources": [
            {
              "fileName": "util/wrapper/response.wrapper.ts",
              "line": 3,
              "character": 21
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            132
          ]
        }
      ],
      "sources": [
        {
          "fileName": "util/wrapper/response.wrapper.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "External modules",
      "kind": 1,
      "children": [
        157,
        1,
        5,
        93,
        90,
        18,
        156,
        94,
        105,
        109,
        113,
        42,
        19,
        89,
        161,
        155,
        79,
        88,
        81,
        43,
        55,
        154,
        114,
        131
      ]
    }
  ]
}