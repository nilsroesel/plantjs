{
	"id": 0,
	"name": "skei√∞js",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 188,
			"name": "Decorator-Configs",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "G:/PROGRAMMIERUNG/skeidjs/src/interfaces/application.interface.ts",
			"children": [
				{
					"id": 189,
					"name": "ApplicationConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "httpPort default 80, https default 443"
					},
					"children": [
						{
							"id": 195,
							"name": "components",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 21,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Instantiable",
										"id": 23,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 190,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 11,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 193,
							"name": "middleware",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 19,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Middleware",
								"id": 48
							}
						},
						{
							"id": 194,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 20,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Instantiable",
										"id": 23,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 191,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 192,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "interfaces/application.interface.ts",
											"line": 12,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								195,
								190,
								193,
								194,
								191
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/application.interface.ts",
							"line": 10,
							"character": 34
						}
					]
				},
				{
					"id": 206,
					"name": "ComponentConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 208,
							"name": "middleware",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/component.interface.ts",
									"line": 8,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Middleware",
								"id": 48
							}
						},
						{
							"id": 207,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/component.interface.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								208,
								207
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/component.interface.ts",
							"line": 6,
							"character": 32
						}
					]
				},
				{
					"id": 210,
					"name": "EndpointConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 212,
							"name": "middleware",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/endpoint.interface.ts",
									"line": 8,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Middleware",
								"id": 48
							}
						},
						{
							"id": 211,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/endpoint.interface.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								212,
								211
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/endpoint.interface.ts",
							"line": 6,
							"character": 31
						}
					]
				},
				{
					"id": 196,
					"name": "HttpsOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 197,
							"name": "allowHttp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 25,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 201,
							"name": "ca",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 29,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						},
						{
							"id": 200,
							"name": "cert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 28,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						},
						{
							"id": 202,
							"name": "crl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 30,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						},
						{
							"id": 198,
							"name": "httpPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 199,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 27,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						},
						{
							"id": 204,
							"name": "rejectUnauthorized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 32,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 203,
							"name": "requestCert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/application.interface.ts",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								197,
								201,
								200,
								202,
								198,
								199,
								204,
								203
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/application.interface.ts",
							"line": 24,
							"character": 29
						}
					]
				},
				{
					"id": 214,
					"name": "ModuleConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 216,
							"name": "components",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/module.interface.ts",
									"line": 9,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Instantiable",
										"id": 23,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 217,
							"name": "middleware",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/module.interface.ts",
									"line": 10,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Middleware",
								"id": 48
							}
						},
						{
							"id": 219,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/module.interface.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Instantiable",
										"id": 23,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 218,
							"name": "providers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/module.interface.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Instantiable",
										"id": 23,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 215,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/module.interface.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216,
								217,
								219,
								218,
								215
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/module.interface.ts",
							"line": 7,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189,
						206,
						210,
						196,
						214
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/application.interface.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "Decorators",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "G:/PROGRAMMIERUNG/skeidjs/src/decorators/endpoint.decorator.ts",
			"children": [
				{
					"id": 265,
					"name": "InjectionModes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 267,
							"name": "MULTI_INSTANCE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "decorators/injectable.decorator.ts",
									"line": 37,
									"character": 18
								}
							]
						},
						{
							"id": 266,
							"name": "SINGLE_INSTANCE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "decorators/injectable.decorator.ts",
									"line": 36,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								267,
								266
							]
						}
					],
					"sources": [
						{
							"fileName": "decorators/injectable.decorator.ts",
							"line": 35,
							"character": 26
						}
					]
				},
				{
					"id": 401,
					"name": "Application",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 402,
							"name": "Application",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Class Decorator Function",
								"text": "Creates a runner upon a class. No need to create an object and to serve manually",
								"returns": "\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```typescript\n\n  @Application({\n     contentType: 'application/json',\n     server: {\n         port: 3000,\n         maxConnections: 10,\n         timeout: 500,\n         keepAliveTimeout: 500\n     },\n     components: [TestComponent],\n     middleware: [(request: Request, response: Response) => { }]\n  })\n  class Test {}\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 403,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ApplicationConfig",
										"id": 189
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/application.decorator.ts",
							"line": 41,
							"character": 27
						}
					]
				},
				{
					"id": 261,
					"name": "Component",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 262,
							"name": "Component",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Class Decorator Function",
								"text": "A collection of endpoints. Every endpoints in this will apply the given metadata.\nAdd the class Symbols to the application components array (similar to angular module)\nto apply them to an application",
								"returns": "\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```typescript\n\n  @Component({\n     route: '/api',\n     middleware: [(request: Request, response: Response) => { }]\n  })\n  class Test {}\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 263,
									"name": "conf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ComponentConfig",
										"id": 206
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/component.decorator.ts",
							"line": 26,
							"character": 25
						}
					]
				},
				{
					"id": 276,
					"name": "Delete",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 277,
							"name": "Delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Since 1.7\nProperty Decorator Function\nWorks basically like the @Endpoint decorator, but only DELETE requests will be mapped to it. this will\nenable duplicate routes on different method types"
							},
							"parameters": [
								{
									"id": 278,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EndpointConfig",
										"id": 210
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 280,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 281,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Object"
													}
												},
												{
													"id": 282,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/http-methods/delete.decorator.ts",
							"line": 14,
							"character": 22
						}
					]
				},
				{
					"id": 8,
					"name": "Endpoint",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 9,
							"name": "Endpoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Property Decorator Function",
								"text": "Creates an endpoint of a function\nThe decorated function need the following index signature otherwise it will throw an error\n(request: Request, response: Response, next?: Function) (also an index signature fore middlewares)\nIf you pass the next-function and call it, it will get the next function from the route middlewares\nand abort the current execution",
								"returns": "\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```typescript\n\n  @Component({route: '/api'})\n  class Test {\n\n     @Endpoint({\n         route: '/foo'\n         middleware: [(request: request) => request.params['foo'] = foo; ]\n     )\n     foo(request: Request, response: Response) {\n         response\n          .status(200)\n          .json(request.params.foo)\n          .send();\n     }\n  }\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 10,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EndpointConfig",
										"id": 210
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 11,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 12,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 13,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Object"
													}
												},
												{
													"id": 14,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/endpoint.decorator.ts",
							"line": 38,
							"character": 24
						}
					]
				},
				{
					"id": 284,
					"name": "Get",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 285,
							"name": "Get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Since 1.7\nProperty Decorator Function\nWorks basically like the @Endpoint decorator, but only GET requests will be mapped to it. this will\nenable duplicate routes on different method types"
							},
							"parameters": [
								{
									"id": 286,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EndpointConfig",
										"id": 210
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 287,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 288,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 289,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Object"
													}
												},
												{
													"id": 290,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/http-methods/get.decorator.ts",
							"line": 14,
							"character": 19
						}
					]
				},
				{
					"id": 268,
					"name": "Injectable",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 269,
							"name": "Injectable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Class Decorator Function",
								"text": "Allows to inject dependencies into objects",
								"returns": "\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```typescript\n\n  @Injectable()\n  class InjectedDependency {\n     public foo = 'foo'\n  }\n\n  class Target {\n     constructor (private foo: InjectedDependency);\n\n     getFoosFoo() { return this.foo.foo }\n  }\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 270,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "InjectionModes",
										"id": 265
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GenericClassDecorator",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Instantiable",
										"id": 23,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/injectable.decorator.ts",
							"line": 28,
							"character": 26
						}
					]
				},
				{
					"id": 272,
					"name": "Module",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 273,
							"name": "Module",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Class Decorator Function",
								"text": "A module gathers components and uses an own store for shared instances dependency injection.\nEvery not provided dependency will be loaded from the application instance store",
								"returns": "\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```typescript\n\n  @Module({\n\n  })\n  class Test {}\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 274,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ModuleConfig",
										"id": 214
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/module.decorator.ts",
							"line": 25,
							"character": 22
						}
					]
				},
				{
					"id": 292,
					"name": "Patch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 293,
							"name": "Patch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Since 1.7\nProperty Decorator Function\nWorks basically like the @Endpoint decorator, but only PATCH requests will be mapped to it. this will\nenable duplicate routes on different method types"
							},
							"parameters": [
								{
									"id": 294,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EndpointConfig",
										"id": 210
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 295,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 296,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 297,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Object"
													}
												},
												{
													"id": 298,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/http-methods/patch.decorator.ts",
							"line": 14,
							"character": 21
						}
					]
				},
				{
					"id": 300,
					"name": "Post",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 301,
							"name": "Post",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Since 1.7\nProperty Decorator Function\nWorks basically like the @Endpoint decorator, but only POST requests will be mapped to it. this will\nenable duplicate routes on different method types"
							},
							"parameters": [
								{
									"id": 302,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EndpointConfig",
										"id": 210
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 303,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 304,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 305,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Object"
													}
												},
												{
													"id": 306,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/http-methods/post.decorator.ts",
							"line": 14,
							"character": 20
						}
					]
				},
				{
					"id": 308,
					"name": "Put",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 309,
							"name": "Put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Since 1.7\nProperty Decorator Function\nWorks basically like the @Endpoint decorator, but only PUT requests will be mapped to it. this will\nenable duplicate routes on different method types"
							},
							"parameters": [
								{
									"id": 310,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EndpointConfig",
										"id": 210
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 311,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 312,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 313,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Object"
													}
												},
												{
													"id": 314,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "decorators/http-methods/put.decorator.ts",
							"line": 14,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						265
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						401,
						261,
						276,
						8,
						284,
						268,
						272,
						292,
						300,
						308
					]
				}
			],
			"sources": [
				{
					"fileName": "decorators/endpoint.decorator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 315,
			"name": "Http",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "G:/PROGRAMMIERUNG/skeidjs/src/util/wrapper/request.wrapper.ts",
			"children": [
				{
					"id": 316,
					"name": "Request",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A simple facade for the node http IncomingMessage"
					},
					"children": [
						{
							"id": 327,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 328,
									"name": "new Request",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 329,
											"name": "request",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IncomingMessage"
											}
										},
										{
											"id": 330,
											"name": "body",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 331,
											"name": "binary",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 332,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Request",
										"id": 316
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 51,
									"character": 28
								}
							]
						},
						{
							"id": 326,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 51,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 325,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The http body"
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 49,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 323,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The http headers"
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 41,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "IncomingHttpHeaders"
							}
						},
						{
							"id": 324,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The http method"
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 45,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 322,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The request url params\nWill add key and values for the route specific defined parameters (e.g. /:id)"
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 37,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 320,
							"name": "request",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 28,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "IncomingMessage"
							}
						},
						{
							"id": 321,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The request url"
							},
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 32,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 335,
							"name": "file",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 336,
									"name": "file",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Saves data to the given path"
									},
									"parameters": [
										{
											"id": 337,
											"name": "targetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Path where the file should be saved\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 78,
									"character": 8
								}
							]
						},
						{
							"id": 333,
							"name": "json",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 334,
									"name": "json",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the http body as object"
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 66,
									"character": 8
								}
							]
						},
						{
							"id": 317,
							"name": "readRequestBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 318,
									"name": "readRequestBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 319,
											"name": "request",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IncomingMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/request.wrapper.ts",
									"line": 12,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								327
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								326,
								325,
								323,
								324,
								322,
								320,
								321
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								335,
								333,
								317
							]
						}
					],
					"sources": [
						{
							"fileName": "util/wrapper/request.wrapper.ts",
							"line": 11,
							"character": 20
						}
					]
				},
				{
					"id": 339,
					"name": "Response",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A simple facade for the node http ServerResponse"
					},
					"children": [
						{
							"id": 342,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 343,
									"name": "new Response",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 344,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ServerResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Response",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 19,
									"character": 31
								}
							]
						},
						{
							"id": 371,
							"name": "binary",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 372,
									"name": "binary",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Since version 1.6\nSends binary payload to the client (would work for downloading)\nFor displaying a video on a frontend use the stream() method"
									},
									"parameters": [
										{
											"id": 373,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 121,
									"character": 10
								}
							]
						},
						{
							"id": 382,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 383,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Since 1.8\nEnds the response"
									},
									"parameters": [
										{
											"id": 384,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 385,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 386,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 387,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "util/wrapper/response.wrapper.ts",
															"line": 175,
															"character": 18
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 175,
									"character": 7
								}
							]
						},
						{
							"id": 377,
							"name": "event",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 378,
									"name": "event",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Since version 1.7\nActs as server sent event source\nUse this for serving things like music or videos e.g. for a web browser"
									},
									"parameters": [
										{
											"id": 379,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A headers object for additional headers\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ServerEventDispatcher",
										"id": 389
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 147,
									"character": 9
								}
							]
						},
						{
							"id": 380,
							"name": "finished",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 381,
									"name": "finished",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Since 1.8\nIf the response was ended this will return true",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 166,
									"character": 12
								}
							]
						},
						{
							"id": 360,
							"name": "json",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 361,
									"name": "json",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Writes json representation of the given object to the response, but don't closes the stream",
										"returns": "\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "since 1.5.1 Use respond() instead"
											}
										]
									},
									"parameters": [
										{
											"id": 362,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Response",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 63,
									"character": 8
								}
							]
						},
						{
							"id": 368,
							"name": "respond",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 369,
									"name": "respond",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Since version 1.5.1 you will use this to respond.\nYou are now able to put in an promise (that you e.g. get from some database services)\nand can respond with it.\nOn error it will respond with an error object that put the promise rejection reason as message"
									},
									"parameters": [
										{
											"id": 370,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Promise",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Object"
															}
														]
													},
													{
														"type": "reference",
														"name": "Stream"
													},
													{
														"type": "reference",
														"name": "Object"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 92,
									"character": 11
								}
							]
						},
						{
							"id": 366,
							"name": "send",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 367,
									"name": "send",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Ends the response",
										"tags": [
											{
												"tag": "deprecated",
												"text": "since 1.5.1 Use respond() instead\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 83,
									"character": 8
								}
							]
						},
						{
							"id": 345,
							"name": "setHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 346,
									"name": "setHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a specific http response header",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 347,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 348,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Response",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 29,
									"character": 13
								}
							]
						},
						{
							"id": 356,
							"name": "status",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 357,
									"name": "status",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the http status code",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 358,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 359,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Response",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 51,
									"character": 10
								}
							]
						},
						{
							"id": 374,
							"name": "stream",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 375,
									"name": "stream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Since version 1.6\nTakes a file stream and pipes the response\nUse this for serving things like music or videos e.g. for a web browser"
									},
									"parameters": [
										{
											"id": 376,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "Stream"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 132,
									"character": 10
								}
							]
						},
						{
							"id": 363,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 364,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Writes a string to the response, but don't closes the stream",
										"returns": "\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "since 1.5.1 Use respond() instead"
											}
										]
									},
									"parameters": [
										{
											"id": 365,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Response",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 74,
									"character": 8
								}
							]
						},
						{
							"id": 349,
							"name": "writeHead",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 350,
									"name": "writeHead",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the whole http header at once ( node.http.ServerResponse.writeHead() )",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 351,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 352,
											"name": "headerObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 353,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 354,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 355,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													"sources": [
														{
															"fileName": "util/wrapper/response.wrapper.ts",
															"line": 40,
															"character": 43
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Response",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/response.wrapper.ts",
									"line": 40,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								342
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								371,
								382,
								377,
								380,
								360,
								368,
								366,
								345,
								356,
								374,
								363,
								349
							]
						}
					],
					"sources": [
						{
							"fileName": "util/wrapper/response.wrapper.ts",
							"line": 11,
							"character": 21
						}
					]
				},
				{
					"id": 389,
					"name": "ServerEventDispatcher",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 391,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 392,
									"name": "new ServerEventDispatcher",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 393,
											"name": "connection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ServerResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ServerEventDispatcher",
										"id": 389
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/server-event-dispatcher.ts",
									"line": 8,
									"character": 48
								}
							]
						},
						{
							"id": 390,
							"name": "connection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "util/wrapper/server-event-dispatcher.ts",
									"line": 8,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "ServerResponse"
							}
						},
						{
							"id": 394,
							"name": "dispatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 395,
									"name": "dispatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispatch a sever-sent-event on the depending connection.\nWill throw an error if connection is closed"
									},
									"typeParameter": [
										{
											"id": 396,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 397,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the dispatched event"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 398,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Payload of the dispatched event"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										},
										{
											"id": 399,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional id of the dispatched event\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/wrapper/server-event-dispatcher.ts",
									"line": 19,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								391
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								390
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								394
							]
						}
					],
					"sources": [
						{
							"fileName": "util/wrapper/server-event-dispatcher.ts",
							"line": 6,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						316,
						339,
						389
					]
				}
			],
			"sources": [
				{
					"fileName": "util/wrapper/request.wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 220,
			"name": "Lifecycle",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "G:/PROGRAMMIERUNG/skeidjs/src/interfaces/life-cycle.interface.ts",
			"comment": {},
			"children": [
				{
					"id": 228,
					"name": "ErrorHandlerResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 230,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "interfaces/life-cycle.interface.ts",
									"line": 44,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 229,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/life-cycle.interface.ts",
									"line": 43,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								230,
								229
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/life-cycle.interface.ts",
							"line": 42,
							"character": 35
						}
					]
				},
				{
					"id": 224,
					"name": "OnError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "When the application, a module or a component implements this this interface,\nthe function will be called on any error in the given scope.\nIts possible that multiple onError() functions will be called.\nWhen you don't return, the next handler will be called. If you return an ErrorHandlerResult\nthis will responded if the connection is still opened."
					},
					"children": [
						{
							"id": 225,
							"name": "onError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 226,
									"name": "onError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The error handling function for the implementing scope"
									},
									"parameters": [
										{
											"id": 227,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the error that occurred\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"name": "ErrorHandlerResult",
												"id": 228
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "interfaces/life-cycle.interface.ts",
									"line": 32,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								225
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/life-cycle.interface.ts",
							"line": 27,
							"character": 24
						}
					]
				},
				{
					"id": 221,
					"name": "OnInit",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "When the application, a module or a component implements this this interface,\nthe function will be called after the instance was created."
					},
					"children": [
						{
							"id": 222,
							"name": "onInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 223,
									"name": "onInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "interfaces/life-cycle.interface.ts",
									"line": 10,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								222
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/life-cycle.interface.ts",
							"line": 9,
							"character": 23
						}
					]
				},
				{
					"id": 234,
					"name": "implementsOnError",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "implementsOnError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Type guard for OnError interface"
							},
							"parameters": [
								{
									"id": 236,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/life-cycle.interface.ts",
							"line": 38,
							"character": 33
						}
					]
				},
				{
					"id": 231,
					"name": "implementsOnInit",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 232,
							"name": "implementsOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Type guard for OnInit interface"
							},
							"parameters": [
								{
									"id": 233,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/life-cycle.interface.ts",
							"line": 16,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						228,
						224,
						221
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						234,
						231
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/life-cycle.interface.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 49,
			"name": "Non-exported",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "G:/PROGRAMMIERUNG/skeidjs/src/util/route.ts",
			"sources": [
				{
					"fileName": "util/route.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 19,
			"name": "Types",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "G:/PROGRAMMIERUNG/skeidjs/src/interfaces/types.ts",
			"children": [
				{
					"id": 20,
					"name": "ContextHandlerFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Add here the HandlerFn and the object to which the 'this' should be referred to"
					},
					"children": [
						{
							"id": 22,
							"name": "fn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/types.ts",
									"line": 23,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "HandlerFn",
								"id": 31
							}
						},
						{
							"id": 21,
							"name": "functionContextInstance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/types.ts",
									"line": 22,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								22,
								21
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/types.ts",
							"line": 21,
							"character": 33
						}
					]
				},
				{
					"id": 28,
					"name": "ErrorMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 30,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/types.ts",
									"line": 42,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "interfaces/types.ts",
									"line": 41,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								30,
								29
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/types.ts",
							"line": 40,
							"character": 29
						}
					]
				},
				{
					"id": 23,
					"name": "Instantiable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Any class, or expression on which the new-keyword would work"
					},
					"typeParameter": [
						{
							"id": 24,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 25,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 26,
									"name": "new Instantiable",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 27,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"sources": [
								{
									"fileName": "interfaces/types.ts",
									"line": 38,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								25
							]
						}
					],
					"sources": [
						{
							"fileName": "interfaces/types.ts",
							"line": 38,
							"character": 29
						}
					]
				},
				{
					"id": 31,
					"name": "HandlerFn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The function type for every endpoint and every middleware\nThe next function will break the current function processing completely and will prosed with the nex middleware function"
					},
					"sources": [
						{
							"fileName": "interfaces/types.ts",
							"line": 11,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 33,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 34,
											"name": "request",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Request",
												"id": 316
											}
										},
										{
											"id": 35,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Response",
												"id": 339
											}
										},
										{
											"id": 36,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "interfaces/types.ts",
									"line": 11,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 48,
					"name": "Middleware",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/types.ts",
							"line": 33,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Array",
						"typeArguments": [
							{
								"type": "reference",
								"name": "MiddlewareFunction",
								"id": 47
							}
						]
					}
				},
				{
					"id": 47,
					"name": "MiddlewareFunction",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/types.ts",
							"line": 31,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "HandlerFn",
								"id": 31
							},
							{
								"type": "reference",
								"name": "ContextHandlerFn",
								"id": 20
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						20,
						28,
						23
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						31,
						48,
						47
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/types.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				188,
				1,
				315,
				220,
				49,
				19
			]
		}
	]
}